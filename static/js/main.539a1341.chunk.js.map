{"version":3,"sources":["components/Profile/Profileinfo/Profileinfo.module.css","components/Users/Users.module.css","components/Profile/Posts/Posts.module.css","hoc/withAuthRedirect.js","components/Profile/Posts/Post/Post.module.css","components/Menu/Menu.module.css","components/Messages/Message/Message.module.css","components/common/Preloader/Preloader.module.css","components/Header/Header.module.css","components/Messages/Messages.module.css","imgs/user-img.png","components/Users/Users.js","imgs/preloader.gif","components/common/Preloader/Preloader.js","redux/api.js","redux/UsersReducer.js","components/Users/UsersContainer.js","components/Profile/Posts/Post/Post.js","components/Profile/Posts/Posts.js","redux/ProfileReducer.js","components/Profile/Posts/PostsContainer.js","components/Profile/Profileinfo/ProfileStatus.js","components/Profile/Profileinfo/ProfileStatusWithHooks.js","components/Profile/Profileinfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","imgs/Logo.png","components/Header/Header.js","redux/AuthReducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","components/Login/LoginContainer.js","redux/AppReducer.js","components/Menu/Menu.js","components/Messages/Message/Message.js","redux/MessagesReducer.js","components/Messages/Messages.js","components/Messages/MessagesContainer.js","App.js","reportWebVitals.js","redux/DialogsReducer.js","redux/redux-store.js","index.js"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Users","users","map","u","className","c","content","mainInfo","mainInfo__item","id","avatar","src","photos","small","userImg","disabled","isFollowingProgress","some","onClick","followAndUnfollow","followed","name","status","country","city","showMoreUsers","Preloader","img","preloader","instance","axios","baseURL","withCredentials","headers","ProfileAPI","getProfileInfo","get","then","responce","data","getStatus","updateStatus","put","AuthApi","getAuth","login","email","password","rememberMe","captcha","console","log","post","logout","delete","follow_And_Unfollow","set_Users","set_Current_Page","set_Total_Users_Count","show_Or_Hide_Loading","InitialState","pageSize","totalUsersCount","currentPage","loading","userId","type","setLoadingMeaning","meaning","setIsFollowingProgress","progressMeaning","UsersReducer","action","filter","UsersContainer","getUsersTC","followAndUnfollowTC","mapDispatchToProps","dispatch","response","getUsers","items","totalCount","setCurrentPage","unfollow","resultCode","follow","compose","UsersPage","Post","Post__img","Post_text","text","likes","Posts","pf_title","pf__newpost_text","placeholder","value","PostText","onChange","e","postText","target","pf__sendbut","pf__sendbut__button","addPost","posts","p","message","post_Text","add_Post","Set_User_Profile","Get_Status","Update_Status","profile","setUserProfile","ProfileReducer","PostsContainer","profilePage","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","switchEditMode","onBlur","autoFocus","defaultValue","ProfileInfo","info","logo","large","info__text_block","fullName","info__text_block__name","aboutMe","Profile","ProfileContainer","router","params","getProfileInfoTC","getProfileStatusTC","updateProfileStatusTC","warn","location","useLocation","navigate","useNavigate","useParams","Header","header","Logo","loginBlock","set_User_Data","setAuthUserData","getAuthTC","AuthReducer","HeaderContainer","Login","useForm","mode","register","handleSubmit","setError","clearErrors","errors","formState","reset","onSubmit","required","pattern","onFocus","style","color","server","messages","set_initialized","initialized","AppReducer","Menu","Linkfunc","isActive","active","Link","Content","Message","Send_Message","Message_Text","Messages","MessageText","MessagesReducer","trim","length","m","sendMessageContent","MessageTextChange","SendMessage","class","sendMessage","MessagesPage","DialogsContainer","lazy","App","initializeApp","basename","process","path","element","Suspense","fallback","MessagesContainer","LoginContainer","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Dialogs","DialogsReducer","stateCopy","Redusers","combineReducers","DialogsPage","store","legacy_createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.539a1341.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profileinfo_content__21-U1\",\"info\":\"Profileinfo_info__1_PyM\",\"logo\":\"Profileinfo_logo__1GtKU\",\"info__text_block\":\"Profileinfo_info__text_block__3CXUC\",\"info__text_block__name\":\"Profileinfo_info__text_block__name__38FQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__39OkM\",\"content\":\"Users_content__1PDYa\",\"mainInfo\":\"Users_mainInfo__1mr-8\",\"mainInfo__item\":\"Users_mainInfo__item___kYtB\",\"selectedPage\":\"Users_selectedPage__2wBA1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pf-title\":\"Posts_pf-title__2qGp4\",\"pf__newpost_text\":\"Posts_pf__newpost_text__2Mb-5\",\"pf__sendbut\":\"Posts_pf__sendbut__12yLU\",\"pf__sendbut__button\":\"Posts_pf__sendbut__button__3t-Ef\"};","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth){ return (<Navigate to={\"/Login\"}/>)}\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__1tj3K\",\"Post__img\":\"Post_Post__img__1KVgM\",\"Post_text\":\"Post_Post_text__O81DH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Menu_Content__RHax2\",\"Link\":\"Menu_Link__2qVAI\",\"active\":\"Menu_active__3P4hx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Message_content__1shZM\",\"avatar\":\"Message_avatar__79mwI\",\"text\":\"Message_text__1tbDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Preloader_content__W4-Ly\",\"img\":\"Preloader_img__6ruQe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__75_EN\",\"loginBlock\":\"Header_loginBlock__1SXft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Messages_content__1usmH\",\"avatar\":\"Messages_avatar__3GW4G\",\"sendMessage\":\"Messages_sendMessage__rHFzY\",\"sendMessageContent\":\"Messages_sendMessageContent__3GnuF\"};","export default __webpack_public_path__ + \"static/media/user-img.a70cb991.png\";","import React from \"react\";\r\nimport c from \"./Users.module.css\";\r\nimport userImg from \"../../imgs/user-img.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props) => {\r\n    return (<div>\r\n            <div>\r\n            </div>\r\n            {props.users.map(u => <div key={u.id} className={c.content}>\r\n                <div className={c.mainInfo}>\r\n                    <div className={c.mainInfo__item}>\r\n                        <NavLink to={`/Profile/${u.id}`}>\r\n                            <img className={c.avatar}\r\n                                 src={u.photos.small != null ? u.photos.small : userImg}\r\n                            />\r\n                        </NavLink>\r\n                        <button disabled={props.isFollowingProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.followAndUnfollow(u.followed, u.id)\r\n                        }}> {u.followed ? 'Unfollow' : 'Follow'}\r\n                        </button>\r\n                    </div>\r\n                    <div className={c.mainInfo__item}>\r\n                            <span>\r\n                                {u.name}\r\n                            </span>\r\n                        <span>\r\n                        {u.status}\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                <span>\r\n                    {u.country}\r\n                </span>\r\n                    <span>\r\n                    {u.city}\r\n                </span>\r\n                </div>\r\n            </div>)}\r\n            <button onClick={() => {\r\n                props.showMoreUsers()\r\n            }}>Show more\r\n            </button>\r\n        </div>)\r\n}\r\n\r\nexport default Users","export default __webpack_public_path__ + \"static/media/preloader.3fb26d9b.gif\";","import React from \"react\";\r\nimport preloader from \"../../../imgs/preloader.gif\";\r\nimport c from \"./Preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={c.content}>\r\n            <img className={c.img} src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import * as axios from \"axios\";\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials:true,\r\n    headers: {\r\n        \"API-KEY\": \"430c4704-ed52-491c-869b-7f5e70fb9e75\"\r\n    }\r\n})\r\nexport const getUsers = (currentPage,pageSize) => {\r\n\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return instance.delete(`follow/${id}`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return instance.post(`follow/${id}`)\r\n        .then(response => {\r\n            return response.data\r\n        }\r\n    )\r\n}\r\n\r\nexport const getProfileInfo = (id) => {\r\n    console.warn(\"use the ProfileAPI.getProfileInfo(id)\")\r\n    return ProfileAPI.getProfileInfo(id);\r\n}\r\n\r\nexport const getAuth = () => {\r\n    console.warn('use the AuthApi.getAuth()')\r\n    return AuthApi.getAuth()\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfileInfo(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(responce => {\r\n                return responce.data\r\n            })\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`)\r\n            .then(responce => {\r\n                return responce.data\r\n            })\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`,{status:status})\r\n            .then(responce => {\r\n                return responce.data\r\n            })\r\n    },\r\n}\r\n\r\nexport const AuthApi = {\r\n    getAuth(){\r\n        return instance.get('auth/me')\r\n            .then(responce => {\r\n                return responce.data\r\n            })\r\n    },\r\n    login(email,password,rememberMe,captcha){\r\n        console.log(email,password,rememberMe,captcha)\r\n        return instance.post('auth/login', {email,password,rememberMe,captcha})\r\n            .then(responce => {\r\n                return responce.data\r\n            })\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login')\r\n            .then(responce => {\r\n                return responce.data\r\n            })\r\n    },\r\n    captcha(){\r\n        return instance.get('/security/get-captcha-url')\r\n            .then(responce => {\r\n                return responce.data\r\n            })\r\n    },\r\n}","import {follow, getUsers, unfollow} from \"./api\";\r\nlet follow_And_Unfollow = 'followAndUnfollow'\r\nlet set_Users = 'set_Users'\r\nlet set_Current_Page = 'set_Current_Page'\r\nlet set_Total_Users_Count = 'set_Total_Users_Count'\r\nlet show_Or_Hide_Loading = 'show_Or_Hide_Loading'\r\nlet isFollowingProgress = 'toggleIsFollowingProgress'\r\n\r\nlet InitialState = {\r\n    Users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    loading: false,\r\n    isFollowingProgress: []\r\n}\r\n\r\nconst UsersReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case follow_And_Unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: action.followed}\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case set_Users: {\r\n            return {\r\n                ...state,\r\n                Users: [...state.Users, ...action.users]\r\n            }\r\n        }\r\n        case set_Current_Page: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case set_Total_Users_Count: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case show_Or_Hide_Loading: {\r\n            return {\r\n                ...state,\r\n                loading: action.meaning\r\n            }\r\n        }\r\n        case isFollowingProgress: {\r\n            return {\r\n                ...state,\r\n                isFollowingProgress: action.progressMeaning ?\r\n                    [...state.isFollowingProgress, action.userId] :\r\n                    [...state.isFollowingProgress.filter(id => id != action.userId)]\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAndUnfollow = (userId, followed) => {\r\n    return {\r\n        type: follow_And_Unfollow,\r\n        userId,\r\n        followed\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: set_Users,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: set_Current_Page,\r\n        currentPage\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: set_Total_Users_Count,\r\n        totalUsersCount\r\n    }\r\n}\r\n\r\nexport const setLoadingMeaning = (meaning) => {\r\n    return {\r\n        type: show_Or_Hide_Loading,\r\n        meaning\r\n    }\r\n}\r\n\r\nexport const setIsFollowingProgress = (progressMeaning, userId) => {\r\n    return {\r\n        type: isFollowingProgress,\r\n        progressMeaning,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const getUsersTC = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setLoadingMeaning(true))\r\n        getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setLoadingMeaning(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n            dispatch(setCurrentPage(currentPage + 1))\r\n        })\r\n    }\r\n}\r\n\r\nexport const followAndUnfollowTC = (followed, id) => {\r\n    if (followed) {\r\n        return (dispatch) => {\r\n            dispatch(setIsFollowingProgress(true, id))\r\n            unfollow(id).then(\r\n                data => {\r\n                    if (data.resultCode === 0) {\r\n                        dispatch(followAndUnfollow(id, !followed))\r\n                    }\r\n                    dispatch(setIsFollowingProgress(false, id))\r\n                }\r\n            )\r\n        }\r\n    } else {\r\n        return (dispatch) => {\r\n            dispatch(setIsFollowingProgress(true, id))\r\n            follow(id).then(\r\n                data => {\r\n                    if (data.resultCode === 0) {\r\n                        dispatch(followAndUnfollow(id, !followed))\r\n                    }\r\n                    dispatch(setIsFollowingProgress(false, id))\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    followAndUnfollow,\r\n    followAndUnfollowTC,\r\n    getUsersTC,\r\n    setIsFollowingProgress,\r\n} from \"../../redux/UsersReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        if(this.props.isAuth) {\r\n            this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n            // this.props.setLoadingMeaning(true)\r\n            // getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            //     this.props.setLoadingMeaning(false)\r\n            //     this.props.setUsers(data.items)\r\n            //     this.props.setTotalUsersCount(data.totalCount)\r\n            //     this.props.setCurrentPage(this.props.currentPage + 1)\r\n            // })\r\n        }\r\n    }\r\n\r\n    showMoreUsers = () => {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                <Users\r\n                    showMoreUsers={this.showMoreUsers}\r\n                    users={this.props.users}\r\n                    followAndUnfollow={this.props.followAndUnfollowTC}\r\n                    isFollowingProgress={this.props.isFollowingProgress}\r\n                />\r\n                {this.props.loading ? <Preloader/> : null\r\n                }\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        users: state.UsersPage.Users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount: state.UsersPage.totalUsersCount,\r\n        currentPage: state.UsersPage.currentPage,\r\n        loading: state.UsersPage.loading,\r\n        isFollowingProgress: state.UsersPage.isFollowingProgress\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =\r\n    {\r\n        followAndUnfollow,\r\n        setIsFollowingProgress,\r\n        getUsersTC,\r\n        followAndUnfollowTC\r\n    }\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(UsersContainer)","import c from './Post.module.css';\r\nimport React from 'react';\r\nimport userImg from \"../../../../imgs/user-img.png\";\r\nconst Post = (props) => {\r\n  return(\r\n    <div className={c.Post}>\r\n      <img className={c.Post__img} src={props.img ? props.img : userImg}></img>\r\n      <span className={c.Post_text}>{props.text}</span>\r\n      <span>Likes {props.likes}</span>\r\n    </div>\r\n  )\r\n}\r\nexport default Post;","import c from './Posts.module.css';\r\nimport React from 'react';\r\nimport Post from './Post/Post';\r\n\r\nconst Posts = (props) => {\r\n    let AddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let NewPostText = (e) => {\r\n        props.postText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n      <h4 className={c.pf_title}>\r\n        My posts\r\n      </h4>\r\n            <textarea className={c.pf__newpost_text} placeholder={\"Введите текст поста\"} value={props.PostText} onChange={NewPostText}/>\r\n            <div className={c.pf__sendbut}>\r\n                <button className={c.pf__sendbut__button} onClick={AddPost}>Send</button>\r\n            </div>\r\n            <div className={c.posts}>\r\n                {props.Posts.map(p => <Post key={p.id} text={p.message} likes={p.likes} img = {props.img}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Posts;","import {getProfileInfo} from \"./api\";\r\nimport {ProfileAPI} from \"./api\";\r\n\r\nconst post_Text = 'post_Text'\r\nconst add_Post = 'add_Post'\r\nconst Set_User_Profile = 'Set_Users_Profile'\r\nconst Get_Status = 'Get_Status'\r\nconst Update_Status = 'Update_Status'\r\n\r\nlet InitialState = {\r\n    Posts: [\r\n        {id: \"1\", message: \"Hi\", likes: \"0\"},\r\n        {id: \"2\", message: \"somebody is here?\", likes: \"2\"},\r\n        {id: \"3\", message: \"why everyone don't like me?\", likes: \"0\"},\r\n        {id: \"4\", message: \"uhh...\", likes: \"0\"},\r\n        {id: \"5\", message: \"...\", likes: \"0\"},\r\n        {id: \"6\", message: \"...\", likes: \"10\"}\r\n    ],\r\n    PostText: '',\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst ProfileReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case add_Post: {\r\n            return {\r\n                ...state,\r\n                Posts: [...state.Posts, {id: \"1\", message: state.PostText, likes: \"0\"}],\r\n                PostText: \"\"\r\n            }\r\n        }\r\n        case post_Text: {\r\n            return {\r\n                ...state,\r\n                PostText: action.text\r\n            }\r\n        }\r\n        case Set_User_Profile: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case Get_Status: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case Update_Status: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = () => {\r\n    return {\r\n        type: add_Post\r\n    }\r\n}\r\n\r\nexport const postText = (text) => {\r\n    return {\r\n        type: post_Text,\r\n        text\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: Set_User_Profile,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const getStatus = (status) => {\r\n    return {\r\n        type: Get_Status,\r\n        status\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return {\r\n        type: Update_Status,\r\n        status\r\n    }\r\n}\r\n\r\nexport const getProfileInfoTC = (id) => {\r\n    return (dispatch) => {\r\n        getProfileInfo(id).then(\r\n            data => {\r\n                dispatch(setUserProfile(data))\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getProfileStatusTC = (status) => {\r\n    return (dispatch) => {\r\n        ProfileAPI.getStatus(status).then(\r\n            data => {\r\n                dispatch(getStatus(data))\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const updateProfileStatusTC = (status) => {\r\n    return (dispatch) => {\r\n        ProfileAPI.updateStatus(status).then(\r\n            data => {\r\n                if(data.resultCode == 0) {\r\n                    dispatch(updateStatus(status))\r\n                }\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileReducer","import React from 'react';\r\nimport Posts from \"./Posts\";\r\nimport {addPost, postText} from \"../../../redux/ProfileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        Posts: state.profilePage.Posts,\r\n        PostText: state.profilePage.PostText,\r\n        avatar: state.profilePage.profile.photos.small\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    addPost,\r\n    postText\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps,mapDispatchToProps)(Posts);\r\n\r\n    // return <Context.Consumer>\r\n    //     {store => {\r\n    //         let state = store.getState()\r\n    //\r\n    //         let dispatch = store.dispatch.bind(store)\r\n    //\r\n    //         let AddPost = () => {\r\n    //             dispatch(AddPostActionCreator())\r\n    //         }\r\n    //\r\n    //         let NewPostText = (text) => {\r\n    //             dispatch(NewPostTextActionCreator(text))\r\n    //         }\r\n    //\r\n    //         return (\r\n    //             <Posts\r\n    //                 Posts={state.ProfilePage.Posts}\r\n    //                 AddPost={AddPost}\r\n    //                 NewPostText={NewPostText}\r\n    //                 PostText={state.ProfilePage.PostText}\r\n    //             />\r\n    //         )\r\n    //     }\r\n    //     }\r\n    // </Context.Consumer>\r\nexport default PostsContainer;","import c from './Profileinfo.module.css';\r\nimport React from 'react';\r\nimport userImg from \"../../../imgs/user-img.png\"\r\n\r\nclass Profilestatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    switchEditMode = () => {\r\n        this.setState({\r\n            editMode:!this.state.editMode\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let changeStatus = (e) => {\r\n            this.setState({status: e.target.value})\r\n        }\r\n        let onBlur = () =>{\r\n            this.switchEditMode()\r\n            if(this.state.status != '') {\r\n                this.props.updateStatus(this.state.status)\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {!this.state.editMode ?\r\n                    <div>\r\n                        <span onClick={this.switchEditMode} >{this.props.status?this.props.status:'Status'}</span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input autoFocus={true} onBlur={onBlur} onChange={changeStatus} value={this.state.status?this.state.status:''}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Profilestatus;","import c from './Profileinfo.module.css';\r\nimport React, {useEffect} from 'react';\r\nimport userImg from \"../../../imgs/user-img.png\"\r\nimport {useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(\r\n        () => {\r\n            setStatus(props.status)\r\n        },\r\n        [props.status]\r\n    )\r\n\r\n    const switchEditMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n        props.updateStatus(e.target.value)\r\n        switchEditMode()\r\n    }\r\n        return (\r\n            <div>\r\n                {!editMode ?\r\n                    <div>\r\n                        <span onClick={switchEditMode} > {status?status:'Status'}</span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input onBlur={onStatusChange} autoFocus={true} defaultValue={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\nexport default ProfileStatusWithHooks;","import c from './Profileinfo.module.css';\r\nimport React from 'react';\r\nimport userImg from \"../../../imgs/user-img.png\"\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div className={c.content}>\r\n            <div className={c.info}>\r\n                <div>\r\n                    <img className={c.logo}\r\n                         src={props.profile.photos.large ? props.profile.photos.large : userImg}></img>\r\n                </div>\r\n                <div className={c.info__text_block}>\r\n                    {props.profile.fullName ?\r\n                        <span className={c.info__text_block__name}>\r\n                    {props.profile.fullName}\r\n                        </span> : null\r\n                    }\r\n                    {props.profile.status ?\r\n                        <span>Description: {props.profile.status}</span>\r\n                        : null\r\n                    }\r\n                    {props.profile.aboutMe ?\r\n                        <span>Description: {props.profile.aboutMe}</span>\r\n                        : null\r\n                    }\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import c from './Profile.module.css';\r\nimport React from 'react';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Navigate} from \"react-router-dom\"\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n                <PostsContainer img={props.profile.photos.small} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileInfoTC,\r\n    getProfileStatusTC,\r\n    setUserProfile,\r\n    updateProfileStatusTC\r\n} from \"../../redux/ProfileReducer\";\r\nimport {\r\n    Navigate,\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n            let userId = this.props.router.params.userId\r\n            if (!userId) {\r\n                userId = this.props.userId\r\n            }\r\n            this.props.getProfileInfoTC(userId)\r\n            this.props.getProfileStatusTC(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile profile = {this.props.profile} status={this.props.status} updateStatus={this.props.updateProfileStatusTC}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        userId: state.auth.userId,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n)\r\n\r\nconst mapDispatchToProps = {\r\n    setUserProfile,\r\n    getProfileInfoTC,\r\n    getProfileStatusTC,\r\n    updateProfileStatusTC,\r\n}\r\n\r\nfunction withRouter(ProfileContainer) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <ProfileContainer\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","export default __webpack_public_path__ + \"static/media/Logo.74885617.png\";","import c from './Header.module.css';\r\nimport React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Logo from \"../../imgs/Logo.png\"\r\nconst Header = (props) => {\r\n  return(\r\n      <header className={c.header}>\r\n        <img src={Logo}></img>\r\n          <div className={c.loginBlock}>\r\n              {props.isAuth ? props.login :\r\n                  <NavLink to={'/login'}>Login</NavLink>\r\n              }\r\n               {props.isAuth ? <button onClick={props.logout}>Log out</button> : ''}\r\n\r\n          </div>\r\n      </header>\r\n  )\r\n}\r\nexport default Header;","import {AuthApi, getAuth} from \"./api\";\r\n\r\n\r\nlet set_User_Data = 'set_User_Data'\r\n\r\nlet InitialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    loading: false\r\n}\r\n\r\nconst AuthReducer = (state = InitialState, action) => {\r\n\r\n    switch (action.type){\r\n        case set_User_Data: {\r\n            return {\r\n                ...state,\r\n                userId: action.userId,\r\n                email: action.email,\r\n                login: action.login,\r\n                isAuth: action.isAuth\r\n            }\r\n        }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId,email,login,isAuth) => {\r\n    return{\r\n        type: set_User_Data,\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n}\r\n\r\nexport const getAuthTC = () => dispatch => {\r\n    return getAuth().then(\r\n        data => {\r\n            if(data.resultCode === 0){\r\n                let {id, email, login} = data.data\r\n                dispatch(setAuthUserData(id, email, login,true))\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport const login = (email,password,rememberMe,setError) => {\r\n    return (dispatch) => {\r\n        AuthApi.login(email,password,rememberMe,true).then(\r\n            data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(getAuthTC())\r\n                }\r\n                else {\r\n                    setError('server', {\r\n                        message: data.messages\r\n                    })\r\n                }\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n    AuthApi.logout().then(\r\n        data => {\r\n            if(data.resultCode === 0){\r\n                dispatch(setAuthUserData(null,null,null,false))\r\n            }\r\n            else{\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport default AuthReducer","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthTC, logout, setAuthUserData} from \"../../redux/AuthReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return(\r\n            <Header isAuth={this.props.isAuth} login = {this.props.login} logout = {this.props.logout} />\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    setAuthUserData,\r\n    getAuthTC,\r\n    logout\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HeaderContainer);","import {SubmitHandler, useForm} from 'react-hook-form'\r\nimport React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setError,\r\n        clearErrors,\r\n        formState: {errors},\r\n        reset,\r\n    } = useForm({\r\n        mode: 'all',\r\n\r\n    })\r\n\r\n    const onSubmit = data => {\r\n        props.login(data.email,data.password,data.rememberMe,setError)\r\n        reset()\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Navigate to={'/Profile'}/>\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <input {...register('email',\r\n                        {\r\n                            required: \"required filed\",\r\n                            pattern:{\r\n                                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: 'Pleace enter the valid email'\r\n                            }\r\n                        })}\r\n                        onFocus={() => {clearErrors()}}\r\n                           placeholder={\"Email\"}/>\r\n                </div>\r\n                {errors.email && <div style={{color:'red'}}>{errors.email.message}</div>}\r\n                <div>\r\n                    <input {...register('password',\r\n                        {\r\n                            required: \"required filed\"\r\n                        })}\r\n                           onFocus={() => {clearErrors()}}\r\n                           placeholder={\"Password\"}/>\r\n                </div>\r\n                {errors.password && <div style={{color:'red'}}>{errors.password.message}</div>}\r\n                <div>\r\n                    <input {...register('rememberMe')} type={\"checkbox\"}/> remember me\r\n                </div>\r\n                <div>\r\n                    <button >Login</button>\r\n                </div>\r\n                {errors.server && <div style={{color:'red'}}>{errors.server.message}</div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/AuthReducer\";\r\nimport Login from \"./Login\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    login\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)","import {getAuthTC} from \"./AuthReducer\";\r\n\r\nlet set_initialized = 'set_initialized'\r\n\r\nlet InitialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst AppReducer = (state = InitialState, action) => {\r\n\r\n    switch (action.type){\r\n        case set_initialized: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => {\r\n    return{\r\n        type: set_initialized,\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => dispatch => {\r\n    let promise = dispatch(getAuthTC())\r\n    promise.then(() => {\r\n            dispatch(setInitialized())\r\n        }\r\n    )\r\n}\r\n\r\nexport default AppReducer","import c from './Menu.module.css';\r\nimport React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n    const Linkfunc = ({isActive}) => (isActive ? c.active : c.Link)\r\n    return (\r\n        <nav className={c.Content}>\r\n            <div>\r\n                <NavLink className={Linkfunc} to=\"/Profile\">Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={Linkfunc} to=\"/Dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink className={Linkfunc} to=\"/Users\">Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Menu;","import c from './Message.module.css';\r\nimport React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Message = (props) => {\r\n  return(\r\n      <div className={c.content}>\r\n          <img className={c.avatar} src=\"https://e7.pngegg.com/pngimages/744/742/png-clipart-dog-breed-wolfdog-illustration-exquisite-hand-painted-dogs-avatar-watercolor-painting-heroes.png\"></img>\r\n          <span className={c.text}>{props.message}</span>\r\n      </div>\r\n  )\r\n}\r\nexport default Message;","import message from \"../components/Messages/Message/Message\";\r\n\r\nconst Send_Message = 'Send_Message'\r\nconst Message_Text = 'Message_Text'\r\n\r\nlet InitialState = {\r\n    Messages: [\r\n        {id:\"1\",message:\"Damir loh\"},\r\n        {id:\"2\",message:\"soglasen?\"},\r\n        {id:\"3\",message:\"che ignorish?\"},\r\n        {id:\"4\",message:\"a ti i est damir\"},\r\n        {id:\"5\",message:\"ti loh\"},\r\n    ],\r\n        MessageText: \"\"\r\n}\r\n\r\nconst MessagesReducer = (state = InitialState, action) => {\r\n    switch (action.type) {\r\n        case Send_Message: {\r\n            let message = state.MessageText.trim()\r\n            if(message.length) {\r\n                return {\r\n                    ...state,\r\n                    Messages: [...state.Messages, {id: '1', message: state.MessageText}],\r\n                    MessageText: \"\"\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state\r\n                }\r\n            }\r\n        }\r\n        case Message_Text: {\r\n            return {\r\n                ...state,\r\n                MessageText: action.text\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const SendMessage = () => {\r\n    return{\r\n        type:Send_Message\r\n    }\r\n}\r\n\r\nexport const MessageTextChange = (text) => {\r\n    return{\r\n        type:Message_Text,text: text\r\n    }\r\n}\r\n\r\nexport default MessagesReducer","import c from './Messages.module.css';\r\nimport React, {createRef} from 'react';\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Messages = (props) => {\r\n    let MessagesCount = props.Messages.map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n    let SendMessage = () => {\r\n        props.SendMessage()\r\n    }\r\n\r\n    let MessageTextChange = (e) => {\r\n        props.MessageTextChange(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.Messages.map(m => <Message key={m.id} message={m.message}/>)}\r\n            <div className={c.sendMessageContent}>\r\n                <textarea placeholder={\"Введите сообщение\"} value={props.MessageText} onChange={MessageTextChange}/>\r\n                <button onClick={SendMessage}  class={c.sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Messages;","import React, {createRef} from 'react';\r\nimport {MessageTextChange, SendMessage} from \"../../redux/MessagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        Messages: state.MessagesPage.Messages,\r\n        MessageText: state.MessagesPage.MessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    SendMessage,\r\n    MessageTextChange\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Messages)","import UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/AppReducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport './App.css';\r\nimport React from 'react';\r\nimport Menu from './components/Menu/Menu';\r\nimport {BrowserRouter, Routes, Route, Redirect, withRouter} from \"react-router-dom\";\r\nimport MessagesContainer from \"./components/Messages/MessagesContainer\";\r\nlet DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n\r\n\r\nclass App extends React.Component{\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <div className=\"app-wrapper\">\r\n                    <div className='app-body'>\r\n                        <HeaderContainer/>\r\n                        <Menu/>\r\n                        <Routes>\r\n                            <Route path='' element={<ProfileContainer/>}/>\r\n                            <Route path=\"/Dialogs/\" element={\r\n                                <React.Suspense fallback={<Preloader/>}>\r\n                                    <DialogsContainer/>\r\n                                </React.Suspense>\r\n\r\n                            }/>\r\n                            <Route path=\"Dialogs/*\" element={<MessagesContainer/>}/>\r\n                            <Route path='Profile/:userId' element={<ProfileContainer/>}/>\r\n                            <Route path='Profile/' element={<ProfileContainer/>}/>\r\n                            <Route path=\"Users\" element={<UsersContainer/>}/>\r\n                            <Route path=\"Login\" element={<LoginContainer/>}/>\r\n                        </Routes>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        initialized: state.app.initialized\r\n    }\r\n)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{initializeApp}),\r\n)(App)","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let InitialState = {\r\n    Dialogs: [\r\n        {id: \"1\", name: \"Dmitry\"},\r\n        {id: \"2\", name: \"Sasha\"},\r\n        {id: \"3\", name: \"Timofey\"}\r\n    ]\r\n}\r\n\r\nconst DialogsReducer = (state = InitialState, action) => {\r\n    let stateCopy = {\r\n        ...state\r\n    }\r\n\r\n    switch (action.type){\r\n\r\n    }\r\n\r\n    return stateCopy\r\n}\r\n\r\nexport default DialogsReducer","import {applyMiddleware, combineReducers, legacy_createStore} from \"redux\";\r\nimport ProfileReducer from \"./ProfileReducer\";\r\nimport MessagesReducer from \"./MessagesReducer\";\r\nimport DialogsReducer from \"./DialogsReducer\";\r\nimport UsersReducer from \"./UsersReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nlet Redusers = combineReducers(\r\n    {\r\n            profilePage: ProfileReducer,\r\n            MessagesPage: MessagesReducer,\r\n            DialogsPage: DialogsReducer,\r\n            UsersPage: UsersReducer,\r\n            auth: AuthReducer,\r\n            app: AppReducer\r\n    }\r\n)\r\n\r\nlet store = legacy_createStore(Redusers, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>, document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}